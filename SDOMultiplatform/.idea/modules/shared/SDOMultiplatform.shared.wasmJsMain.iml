<?xml version="1.0" encoding="UTF-8"?>
<module external.linked.project.id=":shared:wasmJsMain" external.linked.project.path="$MODULE_DIR$/../../../shared" external.root.project.path="$MODULE_DIR$/../../.." external.system.id="GRADLE" external.system.module.group="SDOMultiplatform" external.system.module.type="sourceSet" external.system.module.version="unspecified" type="CIDR_MODULE" version="4">
  <component name="FacetManager">
    <facet external-system-id="GRADLE" type="kotlin-language" name="Kotlin">
      <configuration version="5" platform="Wasm" allPlatforms="wasm-js [JS]" useProjectSettings="false" isTestModule="false" externalProjectId=":shared" isHmppProject="true">
        <dependsOnModuleNames>:shared:commonMain</dependsOnModuleNames>
        <sourceSets>
          <sourceSet>SDOMultiplatform.shared.commonMain</sourceSet>
        </sourceSets>
        <newMppModelJpsModuleKind>COMPILATION_AND_SOURCE_SET_HOLDER</newMppModelJpsModuleKind>
        <compilerSettings>
          <option name="additionalArguments" value="-Xir-module-name=SDOMultiplatform:shared -Xir-per-module-output-name=SDOMultiplatform-shared -Xir-produce-klib-dir -main call -Xwasm -Xwasm-target=wasm-js" />
        </compilerSettings>
        <compilerArguments>
          <flagArguments>
            <flagArg name="sourceMap" arg="true" />
            <flagArg name="multiPlatform" arg="true" />
          </flagArguments>
          <stringArguments>
            <stringArg name="moduleName" arg="shared" />
            <stringArg name="outputDir" arg="$MODULE_DIR$/../../../shared/build/classes/kotlin/wasmJs/main" />
            <stringArg name="sourceMapEmbedSources" arg="never" />
            <stringArg name="target" arg="es5" />
            <stringArg name="apiVersion" arg="2.2" />
            <stringArg name="languageVersion" arg="2.2" />
          </stringArguments>
          <arrayArguments>
            <arrayArg name="fragmentRefines">
              <args>wasmJsMain:commonMain</args>
            </arrayArg>
            <arrayArg name="fragments">
              <args>
                <arg>wasmJsMain</arg>
                <arg>commonMain</arg>
              </args>
            </arrayArg>
            <arrayArg name="pluginClasspaths">
              <args>
                <arg>$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-scripting-jvm/2.2.0/be40e3d9642c5b56f0bd89bb9acde8eaa3f44ceb/kotlin-scripting-jvm-2.2.0.jar</arg>
                <arg>$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-scripting-common/2.2.0/4a3c3ff442adc43fe4e96c72514937753875ae2c/kotlin-scripting-common-2.2.0.jar</arg>
                <arg>$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/2.2.0/fdfc65fbc42fda253a26f61dac3c0aca335fae96/kotlin-stdlib-2.2.0.jar</arg>
                <arg>$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-script-runtime/2.2.0/87c92e866fcd68680966a3005a2992e1ab8ec6ad/kotlin-script-runtime-2.2.0.jar</arg>
                <arg>$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/13.0/919f0dfe192fb4e063e7dacadee7f8bb9a2672a9/annotations-13.0.jar</arg>
              </args>
            </arrayArg>
            <arrayArg name="pluginOptions" />
          </arrayArguments>
        </compilerArguments>
      </configuration>
    </facet>
  </component>
  <component name="NewModuleRootManager">
    <output url="file://$MODULE_DIR$/../../../shared/build/classes/kotlin/wasmJs/main" />
    <exclude-output />
    <content url="file://$MODULE_DIR$/../../../shared/src/wasmJsMain">
      <sourceFolder url="file://$MODULE_DIR$/../../../shared/src/wasmJsMain/kotlin" type="kotlin-source" />
    </content>
    <orderEntry type="jdk" jdkName="Kotlin SDK" jdkType="KotlinSDK" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="module" module-name="SDOMultiplatform.shared.commonMain" />
    <orderEntry type="library" name="Gradle: org.jetbrains.kotlin:kotlin-stdlib-wasm-js:2.2.0" level="project" />
  </component>
</module>